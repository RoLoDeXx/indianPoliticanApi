<!DOCTYPE html>
<html lang="en">

{{>head}}
<p id="prev" style="display:none">{{politicianB.name}}</p>
<p id="curr" style="display:none">{{politicianA.name}}</p>


<body>
    <div class="row">
        <div class="col-md-12">
            <nav class="navbar navbar-expand-lg navbar-dark primary-color">
                <a class="navbar-brand" href="/"><img id="site-logo" src="/images/Capture3.PNG"></a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#basicExampleNav"
                    aria-controls="basicExampleNav" aria-expanded="false" aria-label="Toggle navigation">
                    <i class="fa fa-bars icon-style"></i>
                </button>
                <div class="collapse navbar-collapse" id="basicExampleNav">
                    <ul class="navbar-nav mr-auto">
                        <li class="nav-item">
                            <a class="nav-link " href="/">Home </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/politicians/search">Politicians</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link on-this-page" href="/politicians/compare">Compare</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/disclaimer">Disclaimer</a>
                        </li>

                    </ul>
                    <form class="form-inline" id="searchForm">
                        <div class="md-form my-0">
                            <input id="searchQuery" class="search-query form-control mr-sm-2" type="text"
                                placeholder="Search" aria-label="Search" />
                        </div>
                    </form>
                </div>
            </nav>
        </div>
    </div>

    <div class="container mt-5">
        <div class="card">
            <h1 class="h1-responsive text-center">{{politicianA.name}} Vs
            </h1>
            <div class="container">
                <canvas id="Cases1"></canvas>
                <canvas id="Assets1"></canvas>
                <canvas id="Liabilities1"></canvas>
                <canvas id="Debates1"></canvas>
                <canvas id="PrivateBills1"></canvas>
                <canvas id="Questions1"></canvas>
                <canvas id="Attendance1"></canvas>
            </div>
        </div>
    </div>

    {{!-- <div class="container mt-5">
        <div class="card">
            <h1 class="h1-responsive text-center">{{politicianA.name}} Vs Average Politician</h1>
            <div class="container">
                <canvas id="Cases2"></canvas>
                <canvas id="Assets2"></canvas>
                <canvas id="Liabilities2"></canvas> 
                <canvas id="Debates2"></canvas> 7.7 
                <canvas id="PrivateBills2"></canvas> 0.2
                <canvas id="QuestionsInteracted2"></canvas> 18  
                <canvas id="Attendance2"></canvas> 88
            </div>
        </div>
    </div> --}}

    {{>scripts}}
    <script>
        let name1 = document.getElementById("curr").textContent
        let name2 = document.getElementById("prev").textContent
        if (name2.length > 15) {
            let temp = name2.split(" ")
            name2 = temp[temp.length - 1]
        }

        let Cases1 = document.getElementById("Cases1")
        let Chart1 = new Chart(Cases1, {
            type: "bar",
            data: {
                labels: [name1, name2, "Average"],
                datasets: [{
                    label: 'Criminal Cases',
                    data: [{{ A_Cases }}, {{ B_Cases }}, 5, 0],
            backgroundColor: [
                'rgba(255, 145, 0, 0.8)',
                'rgb(54, 162, 235 , 0.8)',
                'rgba(162, 162, 162, 0.2)'
            ],
            borderColor: [
            ],
            borderWidth: 1
        }]
      },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        callback: function (value) { if (value % 1 === 0) { return value; } }
                    }
                }]
            }
        }
    })

        let Assets1 = document.getElementById("Assets1")
        let Chart2 = new Chart(Assets1, {
            type: "horizontalBar",
            data: {
                labels: [name1, name2, "Average"],
                datasets: [{
                    label: 'Financial Assets ₹',
                    data: [{{ A_Assets }}, {{ B_Assets }}, 12000, 0],
            backgroundColor: [
                'rgba(255, 145, 0, 0.8)',
                'rgb(54, 162, 235 , 0.8)',
                'rgba(162, 162, 162, 0.2)'
            ],
            borderColor: [
            ],
            borderWidth: 1
        }]
      },
        options: { }
    })

        let Liabilities1 = document.getElementById("Liabilities1")
        let Chart3 = new Chart(Liabilities1, {
            type: "horizontalBar",
            data: {
                labels: [name1, name2, "Average"],
                datasets: [{
                    label: 'Liabilities ₹',
                    data: [{{ A_Liabilities }}, {{ B_Liabilities }}, 555000, 0],
            backgroundColor: [
                'rgba(255, 145, 0, 0.8)',
                'rgb(54, 162, 235 , 0.8)',
                'rgba(162, 162, 162, 0.2)'
            ],
            borderColor: [
            ],
            borderWidth: 1
        }]
      },
        options: { }
    })

        let Attendance1 = document.getElementById("Attendance1")
        let Chart4 = new Chart(Attendance1, {
            type: "horizontalBar",
            data: {
                labels: [name1, name2, "Average"],
                datasets: [{
                    label: 'Attendance %',
                    data: [{{ A_Attendance }}, {{ B_Attendance }}, 88, 0],
            backgroundColor: [
                'rgba(255, 145, 0, 0.8)',
                'rgb(54, 162, 235 , 0.8)',
                'rgba(162, 162, 162, 0.2)'
            ],
            borderColor: [
            ],
            borderWidth: 1
        }]
      },
        options: { }
    })

        let Debates1 = document.getElementById("Debates1")
        let Chart5 = new Chart(Debates1, {
            type: "horizontalBar",
            data: {
                labels: [name1, name2, "Average"],
                datasets: [{
                    label: "Debates",
                    data: [{{ A_Debates }}, Math.ceil({{ B_Debates }} / 12), 18, 0],
        backgroundColor: [
            'rgba(255, 145, 0, 0.8)',
            'rgb(54, 162, 235 , 0.8)',
            'rgba(162, 162, 162, 0.2)'
        ],
            borderColor: [
            ],
                borderWidth: 1
        }]
      },
        options: { }
    })

        let PrivateBills1 = document.getElementById("PrivateBills1")
        let Chart6 = new Chart(PrivateBills1, {
            type: "bar",
            data: {
                labels: [name1, name2, "Average"],
                datasets: [{
                    label: 'Private member Bills',
                    data: [{{ A_Bills }}, {{ A_Bills }}, 0.2, 0],
            backgroundColor: [
                'rgba(255, 145, 0, 0.8)',
                'rgb(54, 162, 235 , 0.8)',
                'rgba(162, 162, 162, 0.2)'
            ],
            borderColor: [
            ],
            borderWidth: 1
        }]
      },
        options: {

        }
    })

        let Questions1 = document.getElementById("Questions1")
        let Chart7 = new Chart(Questions1, {
            type: "horizontalBar",
            data: {
                labels: [name1, name2, "Average"],
                datasets: [{
                    label: "Questions",
                    data: [{{ A_Questions }}, Math.ceil({{ B_Questions }} / 12), 18, 0],
        backgroundColor: [
            'rgba(255, 145, 0, 0.8)',
            'rgb(54, 162, 235 , 0.8)',
            'rgba(162, 162, 162, 0.2)'
        ],
            borderColor: [
            ],
                borderWidth: 1
        }]
      },
        options: { }
    })


    </script>

</body>

</html>